name: Build and Publish Windows Skia DLL with GN and Ninja

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout Skia repository
        uses: actions/checkout@v2
        with:
          repository: google/skia  # Skia仓库地址
          path: skia
          ref: main  # 指定分支

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install GN
        run: |
          cd skia
          python tools/git-sync-deps
          mkdir -p third_party/externals/gn
          curl -L https://chrome-infra-packages.appspot.com/dl/gn/gn/windows-amd64/+/latest -o gn.zip
          unzip gn.zip -d third_party/externals/gn
          cp third_party/externals/gn/gn.exe C:/Windows/System32/

      - name: Install Ninja
        run: |
          cd skia
          mkdir -p third_party/externals/ninja
          curl -L https://github.com/ninja-build/ninja/releases/download/v1.10.2/ninja-win.zip -o ninja.zip
          unzip ninja.zip -d third_party/externals/ninja
          cp third_party/externals/ninja/ninja.exe C:/Windows/System32/

      - name: Build Skia DLL with GN and Ninja
        run: |
          cd skia
          bin/gn gen out/Release --args="is_debug=false
            is_official_build=true
            skia_enable_discrete_gpu=true
            skia_enable_fontmgr_android=false
            skia_enable_fontmgr_empty=false
            skia_enable_fontmgr_fuchsia=false
            skia_enable_fontmgr_win_gdi=false
            skia_enable_gpu=true
            skia_enable_pdf=false
            skia_enable_skottie=false
            skia_enable_skshaper=true
            skia_enable_skshaper_tests=false
            skia_enable_spirv_validation=false
            skia_enable_tools=false
            skia_enable_vulkan_debug_layers=false
            skia_use_angle=false
            skia_use_dawn=false
            skia_use_dng_sdk=false
            skia_use_egl=false
            skia_use_expat=false
            skia_use_ffmpeg=false
            skia_use_fixed_gamma_text=false
            skia_use_fontconfig=false
            skia_use_gl=true
            skia_use_harfbuzz=false
            skia_use_icu=false
            skia_use_libheif=false
            skia_use_libjxl_decode=false
            skia_use_lua=false
            skia_use_metal=false
            skia_use_piex=false
            skia_use_system_libjpeg_turbo=false
            skia_use_system_libpng=false
            skia_use_system_libwebp=false
            skia_use_system_zlib=false
            skia_use_vulkan=false
            skia_use_wuffs=true
            skia_use_xps=false
            skia_use_zlib=true
            is_component_build=true"
          ninja -C out/Release skia

      - name: Check build directory
        run: |
          ls skia/out/Release

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: skia-dll
          path: skia/out/Release/skia.dll
          if-no-files-found: error

      - name: Publish artifact
        uses: actions/upload-artifact@v2
        with:
          name: skia-dll
          path: skia/out/Release/skia.dll
          if-no-files-found: error

      - name: Create tag
        run: |
          git tag -a v1.0.0 -m "Release v1.0.0"
          git push origin v1.0.0

      - name: Publish to GitHub Releases
        uses: softprops/action-gh-release@v1
        with:
          files: skia/out/Release/skia.dll
          tag_name: v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.tk }}
